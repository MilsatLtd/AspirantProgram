name: Deploy map-api to ECS

on:
  workflow_dispatch:
    # inputs:
    #   awsRegion:
    #     description: 'AWS Region'
    #     required: true
    #     type: string
      # repo-name:
      #   description: 'Repo Name'
      #   required: true
      #   type: string
      # ecsServiceName:
      #   description: 'ECS Service Name'
      #   required: true
      #   type: string
      # ecsClusterName:
      #   description: 'ECS Cluster Name'
      #   required: true
      #   type: string
# env:              
#   ECR_REPOSITORY_1: 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api     
  # ECR_REPOSITORY_2: 282421455628.dkr.ecr.us-east-1.amazonaws.com/nginx-proxy
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build Docker image
    - name: Build Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: ./src/apis   
        file: ./src/apis/Dockerfile  
        push: false
        tags: map-api:latest  

    - name: List Docker images
      run: docker images

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

     # Tag and Push Docker image to Amazon ECR
    - name: Tag and Push to Amazon ECR
      run: |
        docker tag map-api:latest 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api:latest
        docker push 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_REGION: us-east-1

    # - name: Build and Push Docker image
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: map-api
    #   run: |
    #     cd src/apis
    #     docker build -t map-api .
    #     docker tag map-api:latest 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api:latest
    #     docker push 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api:latest
    #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"

    # - name: Fill in the new image ID for the API container in the Amazon ECS task definition
    #   id: task-def
    #   uses: aws-actions/amazon-ecs-render-task-definition@v1
    #   with:
    #     task-definition: src/apis/map-api-revision.json
    #     container-name: map-api
    #     image: ${{ steps.build-image.outputs.image }}

    # - name: Deploy Amazon ECS task definition
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #   with:
    #     # task-definition: ${{ steps.task-def.outputs.task-definition }}
    #     service: map-api-service6
    #     cluster: milsat-aspirant-program
    #     wait-for-service-stability: true
        
    # - name: Build and Push Docker image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     cd src/apis
    #     docker build -t map-api .
    #     docker tag map-api:latest 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api:latest
    #     docker push 282421455628.dkr.ecr.us-east-1.amazonaws.com/map-api:latest
    #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    # - name: Update ECS service
    #   run: | 
    #     aws ecs update-service --service ${{ github.event.inputs.ecsServiceName }} --task-definition ${{ github.event.inputs.ecsServiceName }} --desired-count 1 --cluster ${{ github.event.inputs.ecsClusterName }}
