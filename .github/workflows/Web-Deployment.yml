name: Deploy Prod Web Page

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: dev-builds
          SLACK_COLOR: '#0000FF'
          SLACK_ICON: https://avatars.githubusercontent.com/in/15368?s=80&v=4
          SLACK_MESSAGE:  "${{ github.repository }} Web Prod Environment Deployment Started!!"
          SLACK_TITLE: "${{ github.repository }} Deployment"
          SLACK_USERNAME: github-actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFICATION_WEBHOOK }}  

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          cd ./src/web
          docker build -t web-app:latest .

      - name: Save Docker Image as Tarball
        run: |
          docker save web-app:latest | gzip > web-app.tar.gz

      - name: Transfer Docker Image to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_IP }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PORT: ${{ secrets.SERVER_PORT }}
          ARGS: "-avzr --delete --exclude='.env.local'"
          SOURCE: "web-app.tar.gz"
          TARGET: "~/AspirantProgram//src/web/"

      - name: SSH and Load/Run Dockerized Web App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/AspirantProgram/src/web/
            echo "Loading Docker Image..."
            docker load < web-app.tar.gz

            echo "Stopping existing container (if any)..."
            docker stop web-app || true
            docker rm web-app || true

            echo "Running Docker Container..."
            docker run -d --name web-app --env-file .env.local -p 3004:3004 web-app:latest

      - name: Slack Notification (Success)
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_CHANNEL: dev-builds
            SLACK_COLOR: '#008000'
            SLACK_ICON: https://avatars.githubusercontent.com/in/15368?s=80&v=4
            SLACK_MESSAGE: "Successfully Deployed ${{ github.repository }} Web to Prod Environment :rocket:"
            SLACK_TITLE: "${{ github.repository }} Deployment"
            SLACK_USERNAME: github-actions
            SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFICATION_WEBHOOK }}
          
      - name: Slack Notification (Failure)
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_CHANNEL: dev-builds
            SLACK_COLOR: '#FF0000'
            SLACK_ICON: https://avatars.githubusercontent.com/in/15368?s=80&v=4
            SLACK_MESSAGE: "Failed to Deploy ${{ github.repository }} Web to Prod Environment :x:"
            SLACK_TITLE: "${{ github.repository }} ECS Deployment Failure"
            SLACK_USERNAME: github-actions
            SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFICATION_WEBHOOK }}
