name: Deploy iOS to App Store

on:
  push:
    branches:
      - apple-store-deployment

jobs:
  build-and-deploy:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: src/mobile
    env:
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}
      DISTRIBUTION_CERTIFICATE: ${{ secrets.DIST_CERTIFICATE_BASE64 }}
      DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.DIST_CERTIFICATE_PASSWORD }}
      PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.22.2

      - name: Install the CodeMagic CLI
        run:  pip install codemagic-cli-tools
 
      - name: Install dependencies
        run: |
          flutter clean
          flutter pub get
          flutter analyze --fatal-infos

      - name: Configure App Store Connect API
        env:
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
          APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
        run: |
           echo "$APP_STORE_CONNECT_PRIVATE_KEY" | base64 --decode > AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}.p8

      - name: Setup Keychain and Certificates
        env:
          CERTIFICATE_P12: ${{ secrets.DIST_CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{ secrets.DIST_CERTIFICATE_PASSWORD }}
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          KEYCHAIN_PASSWORD=$(openssl rand -base64 32)
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          echo -n "$CERTIFICATE_P12" | base64 --decode > certificate.p12
          security import certificate.p12 -k "$KEYCHAIN_PATH" -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s "$KEYCHAIN_PATH"
          security default-keychain -s "$KEYCHAIN_PATH"
          rm certificate.p12

      # - name: Initialize code signing
      #   run: |
      #     keychain initialize
      #     app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) \
      #       --platform IOS \
      #       --type IOS_APP_STORE \
      #       --certificate-key=@file:cert_key \
      #       --create
      #     keychain add-certificates
      #     xcode-project use-profiles

      # - name: Build IPA
      #   run: |
      #     flutter pub get
      #     find . -name "Podfile" -execdir pod install \;
      #     flutter build ipa --release
      #     ls -R $(find . -name "*.ipa" -exec dirname {} \;)

      # - name: Publish to TestFlight
      #   run: |
      #     app-store-connect publish --path $(find $(pwd) -name "*.ipa")
      #     keychain use-login







      # - name: Initialize keychain
      #   run: keychain initialize

      # - name: Set up Provisioning Profile
      #   run: |
      #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
      #     mkdir -p "$PROFILES_HOME"
      #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
      #     echo ${PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
      #     echo "Saved provisioning profile $PROFILE_PATH"  

      # - name: Import Code Signing Certificates
      #   uses: apple-actions/import-codesign-certs@v3
      #   with: 
      #     p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
      #     p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      #     keychain-password: "temppassword"

      # - name: Set temporary keychain as default
      #   run: |
      #     security list-keychains -s /Users/runner/Library/Keychains/signing_temp.keychain-db
      #     security default-keychain -s /Users/runner/Library/Keychains/signing_temp.keychain-db
      #     security unlock-keychain -p "temppassword" /Users/runner/Library/Keychains/signing_temp.keychain-db
      #     security set-keychain-settings -t 360000 -l /Users/runner/Library/Keychains/signing_temp.keychain-db
                      
      # - name: Verify certificates
      #   run: |
      #     security find-identity -p codesigning -v
      #     xcrun security cms -D -i "$HOME/Library/MobileDevice/Provisioning Profiles/"*.mobileprovision
        
      # - name: Set up Code signing settings on Xcode project
      #   run: xcode-project use-profiles

      # - name: Building IPA
      #   run: |
      #     flutter build ipa --release --export-options-plist=/Users/runner/export_options.plist --verbose
                    
      # - name: Save IPA to Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #    name: release-ipa
      #    path: build/ios/ipa/*.ipa

      # - name: Create Github Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/ios/ipa/*.ipa"
      #     tag: "v-test-ios"

      # - name: Install private API key P8
      #   env:
      #     PRIVATE_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      #     API_KEY: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      #   run: | 
      #     mkdir -p ~/private_keys
      #     echo -n "$PRIVATE_API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_$API_KEY.p8
        
      # - name: Upload IPA to TestFlight
      #   env:
      #     APP_FILE: $(find $(pwd)/build/ios/ipa -name "*.ipa")
      #   run: |
      #     xcrun altool --upload-app --type ios --file "$APP_FILE" --apiKey ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }} --apiIssuer ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        