name: Deploy iOS to App Store
on:
  push:
    branches:
      - apple-store-deployment
jobs:
  build-and-deploy:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: src/mobile
    env:
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter SDK
      uses: flutter-actions/setup-flutter@v4
      with:
        channel: stable
        version: 3.22.2

    - name: Install dependencies
      run: |
        flutter clean
        flutter pub get
        flutter analyze --fatal-infos

    - name: Import Code Signing Certificates
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

    - name: Set up Provisioning Profile
      env:
        PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
        mkdir -p "$PROFILES_HOME"
        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
        echo ${PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"

    - name: Prepare App Version
      id: app-version
      run: |
        version=$(cat VERSION)
        echo "build-number=$(($(echo $version | cut -d. -f1) * 1000000 + $(echo $version | cut -d. -f2) * 10000 + ${{ github.run_number }}))" >> $GITHUB_OUTPUT
        echo "build-name=$version.${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: Build IPA for Distribution
      run: |
        flutter build ipa \
        --release \
        --build-number=${{ steps.app-version.outputs.build-number }} \
        --build-name=${{ steps.app-version.outputs.build-name }} \
        --export-options-plist=ios/ExportOptions.plist

    - name: Prepare App Store Connect API Key
      env:
        PRIVATE_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
        API_KEY: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      run: |
        mkdir -p ~/private_keys
        echo -n "$PRIVATE_API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_$API_KEY.p8

    - name: Upload IPA to TestFlight
      run: |
        IPA_PATH=$(find build/ios/ipa -name "*.ipa" | head -n 1)
        if [ -z "$IPA_PATH" ]; then
        echo "Error: No IPA file found"
        exit 1
        fi
        xcrun altool --upload-app \
        --type ios \
        --file "$IPA_PATH" \
        --apiKey ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }} \
        --apiIssuer ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        