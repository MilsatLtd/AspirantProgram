# Generated by Django 4.0.4 on 2023-05-07 06:56

import api.models
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                 max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False,
                 help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(
                    default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('password2', models.CharField(default='', max_length=128)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('gender', models.IntegerField(
                    choices=[(0, 'Male'), (1, 'Female')])),
                ('country', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=11)),
                ('bio', models.TextField(blank=True, default='', max_length=120)),
                ('profile_picture', models.ImageField(
                    blank=True, null=True, upload_to='profile_pictures/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('cohort_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('apply_start_date', models.DateTimeField()),
                ('apply_end_date', models.DateTimeField()),
                ('status', models.IntegerField(choices=[
                 (0, 'Active'), (1, 'Inactive'), (2, 'Upcoming')])),
                ('task_id_1', models.CharField(blank=True, max_length=50, null=True)),
                ('task_id_2', models.CharField(blank=True, max_length=50, null=True)),
                ('duration', models.PositiveIntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(
                    blank=True, default='', max_length=120)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Mentors',
            fields=[
                ('mentor_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('track_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(
                    blank=True, default='', max_length=120)),
                ('enrolled_count', models.IntegerField(default=0)),
                ('cohort', models.ForeignKey(blank=True, null=True,
                 on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='api.cohort')),
                ('parent', models.ForeignKey(blank=True, null=True,
                 on_delete=django.db.models.deletion.CASCADE, related_name='children', to='api.track')),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('todo_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('summary', models.TextField(blank=True, default='', max_length=120)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.TextField(choices=[
                 (0, 'Pending'), (1, 'Completed')])),
                ('feedback', models.TextField(blank=True, choices=[
                 (0, 'Failed'), (1, 'Passed')], null=True)),
                ('document', models.FileField(
                    blank=True, null=True, upload_to='todo_docs/')),
                ('course', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, related_name='todos', to='api.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='todos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('student_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('progress', models.IntegerField(default=0, validators=[
                 django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                 related_name='mentees', to='api.mentors')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='students', to='api.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='studentship', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('sumbitted_at', models.DateTimeField(auto_now_add=True)),
                ('question_1', models.TextField(max_length=200)),
                ('question_2', models.TextField(max_length=200)),
                ('question_3', models.TextField(max_length=200)),
                ('mentor_feedback', models.TextField(max_length=200, null=True)),
                ('cohort', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.cohort')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mentors',
            name='track',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='mentors', to='api.track'),
        ),
        migrations.AddField(
            model_name='mentors',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='mentorship', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='track',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='api.track'),
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('applicant_id', models.UUIDField(default=uuid.uuid4,
                 editable=False, primary_key=True, serialize=False)),
                ('reason', models.TextField(max_length=200)),
                ('referral', models.CharField(max_length=30)),
                ('skills', models.TextField(max_length=50)),
                ('purpose', models.TextField(max_length=50)),
                ('education', models.IntegerField(choices=[
                 (0, 'High School'), (1, 'Undergraduate'), (2, 'Graduate')])),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[
                 (0, 'Pending'), (1, 'Accepted'), (2, 'Rejected')])),
                ('role', models.IntegerField(choices=[
                 (0, 'Admin'), (1, 'Mentor'), (2, 'Student')])),
                ('file', models.FileField(blank=True, null=True,
                 upload_to='application_files/', validators=[api.models.validate_file_size])),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='applications', to='api.cohort')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='applications', to='api.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='applications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
